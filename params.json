{"name":"Bipolar","tagline":"Open source and language agnostic feature toggle system","body":"# Bipolar Feature Toggle System\r\n\r\n[![Build Status](https://drone.io/github.com/TDispatch/bipolar/status.png)](https://drone.io/github.com/TDispatch/bipolar/latest)\r\n\r\n## Overview\r\n\r\n**Bipolar** is a feature toggle micro service, a bit similar to **django-gargoyle**,\r\nbut with a deep difference: while django-gargoyle is a tool to switch features\r\non Django-based projects, Bipolar is a web service with an API with ability to\r\nbe used remotely by any language and framework.\r\n\r\nThat turns Bipolar a better tool to use in micro-service based architectures,\r\nspecially when there more than one language and framework in the whole system\r\nand different frontend approaches.\r\n\r\n## Entities\r\n\r\n### Account\r\n\r\nAn account contains the other elements, with a shortcode and API key to be used for\r\nauthentation. That is very useful for a system with multiple services to serve.\r\n\r\n### Feature\r\n\r\nEach **feature** can be named or structured by the developer taste, as long as it\r\nkeeps a unique small-letters name for each account.\r\n\r\nIf a system has more than one place to enable or disable the same functionality\r\n(e.g. business functions in a CRM), the functionality will be a single **Feature**\r\nwhich is checked by more than one place in the code (can be different systems,\r\nservers, languages, no matters).\r\n\r\n### Qualifier\r\n\r\nA **qualifier** is useful to set different permissions for the same features in an\r\naccount. A good example for it is when you have different **account types** in your\r\nservice (i.e. free and paying accounts), so, each account type is able to see the\r\nfeatures in different ways.\r\n\r\n### Webhook\r\n\r\nA **webhook** is and end point setup to receive the current account''s permissions\r\nwhen something is updated (i.e. a new feature, a new qualifier, a permission is set\r\nor unset, etc.)\r\n\r\nRight now Bipolar supports only Pusher and raw post URLs.\r\n\r\n## Software\r\n\r\nBipolar is written based on the following third party software:\r\n\r\n- Python 2.7\r\n- Django 1.6\r\n- django-tastypie\r\n- pusher\r\n- jellyfish\r\n- south\r\n- requests\r\n- responses\r\n\r\n## License\r\n\r\nFree and Open Source software based on **Gnu Public License v3**.\r\n\r\n## Author\r\n\r\n**Marinho Brandao** <name at gmail.com>\r\n\r\nReleased at first for **T Dispatch** - https://tdispatch.com\r\n\r\n## To do\r\n\r\n### Documentation\r\n\r\n- Getting started\r\n- Server installation\r\n- Preparing Features, Qualifiers and Webhooks\r\n- Using Bipolar\r\n- Clients\r\n- Examples\r\n\r\n### Functions\r\n\r\n- Update tests\r\n- setup.py is not passing 100% - must be fixed and probably cover more\r\n- Django commands for server creation\r\n- Way to deploy with custom settings and static folder\r\n- User invitation\r\n- Nice interface on home page\r\n- Go client\r\n- PHP client\r\n- Ruby client\r\n- JS client\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}